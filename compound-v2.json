{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "properties": {
        "Query": {
            "type": "object",
            "properties": {
                "comptroller": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Comptroller"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "comptrollers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comptroller"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Comptroller_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Comptroller_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "market": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Market"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "markets": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Market"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Market_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Market_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "account": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Account"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accounts": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Account_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Account_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCToken": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/AccountCToken"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokens": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCToken"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCToken_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCToken_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokenTransaction": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/AccountCTokenTransaction"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokenTransactions": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCTokenTransaction"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "transferEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/TransferEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "transferEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransferEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/TransferEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/TransferEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "mintEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/MintEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "mintEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MintEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/MintEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/MintEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "redeemEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/RedeemEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "redeemEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RedeemEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/RedeemEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/RedeemEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "liquidationEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/LiquidationEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "liquidationEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LiquidationEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/LiquidationEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/LiquidationEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "borrowEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BorrowEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "borrowEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BorrowEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/BorrowEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/BorrowEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "repayEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/RepayEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "repayEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepayEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/RepayEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/RepayEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "ctokenTransfer": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/CTokenTransfer"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "ctokenTransfers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CTokenTransfer"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/CTokenTransfer_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/CTokenTransfer_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "underlyingTransfer": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/UnderlyingTransfer"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "underlyingTransfers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnderlyingTransfer"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/UnderlyingTransfer_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/UnderlyingTransfer_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "_meta": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/_Meta_"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "block": {
                                    "$ref": "#/definitions/Block_height"
                                }
                            },
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Access to subgraph metadata"
                }
            },
            "required": []
        }
    },
    "definitions": {
        "ID": {
            "type": "object",
            "title": "ID",
            "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID."
        },
        "Block_height": {
            "type": "object",
            "properties": {
                "hash": {
                    "$ref": "#/definitions/Bytes"
                },
                "number": {
                    "$ref": "#/definitions/Int"
                },
                "number_gte": {
                    "$ref": "#/definitions/Int"
                }
            },
            "required": []
        },
        "Bytes": {
            "type": "object",
            "title": "Bytes"
        },
        "Int": {
            "type": "number",
            "title": "Int",
            "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1."
        },
        "_SubgraphErrorPolicy_": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "allow"
                    ],
                    "title": "Data will be returned even if the subgraph has indexing errors",
                    "description": "Data will be returned even if the subgraph has indexing errors"
                },
                {
                    "enum": [
                        "deny"
                    ],
                    "title": "If the subgraph has indexing errors, data will be omitted. The default.",
                    "description": "If the subgraph has indexing errors, data will be omitted. The default."
                }
            ]
        },
        "Comptroller": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "ID is set to 1"
                },
                "priceOracle": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Address of price oracle the comptroller uses"
                },
                "closeFactor": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Factor used to determine repayAmount for liquidating"
                },
                "liquidationIncentive": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The percent bonus liquidators get for liquidating"
                },
                "maxAssets": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Max assets a single user can enter"
                }
            },
            "required": [
                "id"
            ],
            "description": "The Comptroller type has protocol level variables stored"
        },
        "BigInt": {
            "type": "object",
            "title": "BigInt"
        },
        "Comptroller_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "priceOracle"
                    ],
                    "title": "priceOracle"
                },
                {
                    "enum": [
                        "closeFactor"
                    ],
                    "title": "closeFactor"
                },
                {
                    "enum": [
                        "liquidationIncentive"
                    ],
                    "title": "liquidationIncentive"
                },
                {
                    "enum": [
                        "maxAssets"
                    ],
                    "title": "maxAssets"
                }
            ]
        },
        "OrderDirection": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "asc"
                    ],
                    "title": "asc"
                },
                {
                    "enum": [
                        "desc"
                    ],
                    "title": "desc"
                }
            ],
            "description": "Defines the order direction, either ascending or descending"
        },
        "Comptroller_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "priceOracle": {
                    "$ref": "#/definitions/Bytes"
                },
                "priceOracle_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "priceOracle_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "priceOracle_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "priceOracle_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "priceOracle_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "closeFactor": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "closeFactor_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "closeFactor_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "liquidationIncentive": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "liquidationIncentive_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "liquidationIncentive_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "maxAssets": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "maxAssets_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "maxAssets_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "BlockChangedFilter": {
            "type": "object",
            "properties": {
                "number_gte": {
                    "$ref": "#/definitions/Int"
                }
            },
            "required": [
                "number_gte"
            ]
        },
        "Market": {
            "type": "object",
            "properties": {
                "borrowRate": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Yearly borrow rate. With 2102400 blocks per year"
                },
                "cash": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The cToken contract balance of ERC20 or ETH"
                },
                "collateralFactor": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Collateral factor determining how much one can borrow"
                },
                "exchangeRate": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Exchange rate of tokens / cTokens"
                },
                "interestRateModelAddress": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Address of the interest rate model"
                },
                "name": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Name of the cToken"
                },
                "reserves": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Reserves stored in the contract"
                },
                "supplyRate": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Yearly supply rate. With 2104400 blocks per year"
                },
                "symbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "CToken symbol"
                },
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "CToken address"
                },
                "totalBorrows": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Borrows in the market"
                },
                "totalSupply": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "CToken supply. CTokens have 8 decimals"
                },
                "underlyingAddress": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token address"
                },
                "underlyingName": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token name"
                },
                "underlyingPrice": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying price of token in ETH (ex. 0.007 DAI)"
                },
                "underlyingSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token symbol"
                },
                "accrualBlockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block the market is updated to"
                },
                "blockTimestamp": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Timestamp the market was most recently updated"
                },
                "borrowIndex": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The history of the markets borrow index return (Think S&P 500)"
                },
                "reserveFactor": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The factor determining interest that goes to reserves"
                },
                "underlyingPriceUSD": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token price in USD"
                },
                "underlyingDecimals": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token decimal length"
                }
            },
            "required": [
                "borrowRate",
                "cash",
                "collateralFactor",
                "exchangeRate",
                "interestRateModelAddress",
                "name",
                "reserves",
                "supplyRate",
                "symbol",
                "id",
                "totalBorrows",
                "totalSupply",
                "underlyingAddress",
                "underlyingName",
                "underlyingPrice",
                "underlyingSymbol",
                "accrualBlockNumber",
                "blockTimestamp",
                "borrowIndex",
                "reserveFactor",
                "underlyingPriceUSD",
                "underlyingDecimals"
            ],
            "description": "Market stores all high level variables for a cToken market"
        },
        "BigDecimal": {
            "type": "object",
            "title": "BigDecimal"
        },
        "String": {
            "type": "string",
            "title": "String",
            "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
        },
        "Market_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "borrowRate"
                    ],
                    "title": "borrowRate"
                },
                {
                    "enum": [
                        "cash"
                    ],
                    "title": "cash"
                },
                {
                    "enum": [
                        "collateralFactor"
                    ],
                    "title": "collateralFactor"
                },
                {
                    "enum": [
                        "exchangeRate"
                    ],
                    "title": "exchangeRate"
                },
                {
                    "enum": [
                        "interestRateModelAddress"
                    ],
                    "title": "interestRateModelAddress"
                },
                {
                    "enum": [
                        "name"
                    ],
                    "title": "name"
                },
                {
                    "enum": [
                        "reserves"
                    ],
                    "title": "reserves"
                },
                {
                    "enum": [
                        "supplyRate"
                    ],
                    "title": "supplyRate"
                },
                {
                    "enum": [
                        "symbol"
                    ],
                    "title": "symbol"
                },
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "totalBorrows"
                    ],
                    "title": "totalBorrows"
                },
                {
                    "enum": [
                        "totalSupply"
                    ],
                    "title": "totalSupply"
                },
                {
                    "enum": [
                        "underlyingAddress"
                    ],
                    "title": "underlyingAddress"
                },
                {
                    "enum": [
                        "underlyingName"
                    ],
                    "title": "underlyingName"
                },
                {
                    "enum": [
                        "underlyingPrice"
                    ],
                    "title": "underlyingPrice"
                },
                {
                    "enum": [
                        "underlyingSymbol"
                    ],
                    "title": "underlyingSymbol"
                },
                {
                    "enum": [
                        "accrualBlockNumber"
                    ],
                    "title": "accrualBlockNumber"
                },
                {
                    "enum": [
                        "blockTimestamp"
                    ],
                    "title": "blockTimestamp"
                },
                {
                    "enum": [
                        "borrowIndex"
                    ],
                    "title": "borrowIndex"
                },
                {
                    "enum": [
                        "reserveFactor"
                    ],
                    "title": "reserveFactor"
                },
                {
                    "enum": [
                        "underlyingPriceUSD"
                    ],
                    "title": "underlyingPriceUSD"
                },
                {
                    "enum": [
                        "underlyingDecimals"
                    ],
                    "title": "underlyingDecimals"
                }
            ]
        },
        "Market_filter": {
            "type": "object",
            "properties": {
                "borrowRate": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowRate_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "borrowRate_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "cash": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cash_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "cash_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "collateralFactor": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "collateralFactor_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "collateralFactor_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "exchangeRate": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "exchangeRate_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "exchangeRate_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "interestRateModelAddress": {
                    "$ref": "#/definitions/Bytes"
                },
                "interestRateModelAddress_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "interestRateModelAddress_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "interestRateModelAddress_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "interestRateModelAddress_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "interestRateModelAddress_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "name": {
                    "$ref": "#/definitions/String"
                },
                "name_not": {
                    "$ref": "#/definitions/String"
                },
                "name_gt": {
                    "$ref": "#/definitions/String"
                },
                "name_lt": {
                    "$ref": "#/definitions/String"
                },
                "name_gte": {
                    "$ref": "#/definitions/String"
                },
                "name_lte": {
                    "$ref": "#/definitions/String"
                },
                "name_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "name_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "name_contains": {
                    "$ref": "#/definitions/String"
                },
                "name_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "name_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "name_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "name_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "name_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "name_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "name_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "name_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "name_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "name_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "name_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "reserves": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "reserves_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "reserves_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "supplyRate": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "supplyRate_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "supplyRate_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "symbol": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not": {
                    "$ref": "#/definitions/String"
                },
                "symbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "symbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "symbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "symbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "symbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "symbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "symbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "symbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "totalBorrows": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalBorrows_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalBorrows_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalSupply": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalSupply_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalSupply_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingAddress": {
                    "$ref": "#/definitions/Bytes"
                },
                "underlyingAddress_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "underlyingAddress_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "underlyingAddress_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "underlyingAddress_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "underlyingAddress_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "underlyingName": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingName_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingName_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingName_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingPrice": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPrice_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingPrice_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingSymbol": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "accrualBlockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "accrualBlockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "accrualBlockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTimestamp": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTimestamp_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTimestamp_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "borrowIndex": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "borrowIndex_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "borrowIndex_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "reserveFactor": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "reserveFactor_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "reserveFactor_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "underlyingPriceUSD": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingPriceUSD_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingPriceUSD_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingDecimals": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_not": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_gt": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_lt": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_gte": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_lte": {
                    "$ref": "#/definitions/Int"
                },
                "underlyingDecimals_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "underlyingDecimals_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "User ETH address"
                },
                "tokens": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCToken"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCToken_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCToken_filter"
                                }
                            },
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Array of CTokens user is in"
                },
                "countLiquidated": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Count user has been liquidated"
                },
                "countLiquidator": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Count user has liquidated others"
                },
                "hasBorrowed": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Boolean"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "True if user has ever borrowed"
                },
                "health": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "totalBorrowValueInEth": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "totalCollateralValueInEth": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                }
            },
            "required": [
                "id",
                "tokens",
                "countLiquidated",
                "countLiquidator",
                "hasBorrowed",
                "totalBorrowValueInEth",
                "totalCollateralValueInEth"
            ],
            "description": "Account is an ETH address, with a list of all cToken markets the account has\nparticipated in, along with liquidation information."
        },
        "AccountCToken_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "market"
                    ],
                    "title": "market"
                },
                {
                    "enum": [
                        "symbol"
                    ],
                    "title": "symbol"
                },
                {
                    "enum": [
                        "account"
                    ],
                    "title": "account"
                },
                {
                    "enum": [
                        "transactions"
                    ],
                    "title": "transactions"
                },
                {
                    "enum": [
                        "accrualBlockNumber"
                    ],
                    "title": "accrualBlockNumber"
                },
                {
                    "enum": [
                        "enteredMarket"
                    ],
                    "title": "enteredMarket"
                },
                {
                    "enum": [
                        "cTokenBalance"
                    ],
                    "title": "cTokenBalance"
                },
                {
                    "enum": [
                        "totalUnderlyingSupplied"
                    ],
                    "title": "totalUnderlyingSupplied"
                },
                {
                    "enum": [
                        "totalUnderlyingRedeemed"
                    ],
                    "title": "totalUnderlyingRedeemed"
                },
                {
                    "enum": [
                        "accountBorrowIndex"
                    ],
                    "title": "accountBorrowIndex"
                },
                {
                    "enum": [
                        "totalUnderlyingBorrowed"
                    ],
                    "title": "totalUnderlyingBorrowed"
                },
                {
                    "enum": [
                        "totalUnderlyingRepaid"
                    ],
                    "title": "totalUnderlyingRepaid"
                },
                {
                    "enum": [
                        "storedBorrowBalance"
                    ],
                    "title": "storedBorrowBalance"
                }
            ]
        },
        "AccountCToken_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "market": {
                    "$ref": "#/definitions/String"
                },
                "market_not": {
                    "$ref": "#/definitions/String"
                },
                "market_gt": {
                    "$ref": "#/definitions/String"
                },
                "market_lt": {
                    "$ref": "#/definitions/String"
                },
                "market_gte": {
                    "$ref": "#/definitions/String"
                },
                "market_lte": {
                    "$ref": "#/definitions/String"
                },
                "market_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "market_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "market_contains": {
                    "$ref": "#/definitions/String"
                },
                "market_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "market_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "market_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "market_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "market_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "market_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "market_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "market_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "market_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "market_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "market_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not": {
                    "$ref": "#/definitions/String"
                },
                "symbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "symbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "symbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "symbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "symbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "symbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "symbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "symbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "symbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account": {
                    "$ref": "#/definitions/String"
                },
                "account_not": {
                    "$ref": "#/definitions/String"
                },
                "account_gt": {
                    "$ref": "#/definitions/String"
                },
                "account_lt": {
                    "$ref": "#/definitions/String"
                },
                "account_gte": {
                    "$ref": "#/definitions/String"
                },
                "account_lte": {
                    "$ref": "#/definitions/String"
                },
                "account_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "account_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "account_contains": {
                    "$ref": "#/definitions/String"
                },
                "account_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "account_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "account_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "account_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "account_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "account_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "accrualBlockNumber": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "accrualBlockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "accrualBlockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "enteredMarket": {
                    "$ref": "#/definitions/Boolean"
                },
                "enteredMarket_not": {
                    "$ref": "#/definitions/Boolean"
                },
                "enteredMarket_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Boolean"
                    }
                },
                "enteredMarket_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Boolean"
                    }
                },
                "cTokenBalance": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "cTokenBalance_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "cTokenBalance_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingSupplied": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingSupplied_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingSupplied_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingRedeemed": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRedeemed_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingRedeemed_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrowIndex": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrowIndex_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrowIndex_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingBorrowed": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingBorrowed_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingBorrowed_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingRepaid": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "totalUnderlyingRepaid_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "totalUnderlyingRepaid_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "storedBorrowBalance": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "storedBorrowBalance_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "storedBorrowBalance_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "Boolean": {
            "type": "boolean",
            "title": "Boolean",
            "description": "The `Boolean` scalar type represents `true` or `false`."
        },
        "AccountCToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Concatenation of CToken address and user address"
                },
                "market": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Market"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Relation to market"
                },
                "symbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the cToken"
                },
                "account": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Account"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Relation to user"
                },
                "transactions": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCTokenTransaction"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_filter"
                                }
                            },
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transactions data"
                },
                "accrualBlockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number this asset was updated at in the contract"
                },
                "enteredMarket": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Boolean"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "True if user is entered, false if they are exited"
                },
                "cTokenBalance": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "CToken balance of the user"
                },
                "totalUnderlyingSupplied": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total amount of underlying supplied"
                },
                "totalUnderlyingRedeemed": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total amount of underling redeemed"
                },
                "accountBorrowIndex": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The value of the borrow index upon users last interaction"
                },
                "totalUnderlyingBorrowed": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total amount underlying borrowed, exclusive of interest"
                },
                "totalUnderlyingRepaid": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total amount underlying repaid"
                },
                "storedBorrowBalance": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Current borrow balance stored in contract (exclusive of interest since accrualBlockNumber)"
                },
                "supplyBalanceUnderlying": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "lifetimeSupplyInterestAccrued": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "borrowBalanceUnderlying": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "lifetimeBorrowInterestAccrued": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                }
            },
            "required": [
                "id",
                "market",
                "symbol",
                "account",
                "transactions",
                "accrualBlockNumber",
                "enteredMarket",
                "cTokenBalance",
                "totalUnderlyingSupplied",
                "totalUnderlyingRedeemed",
                "accountBorrowIndex",
                "totalUnderlyingBorrowed",
                "totalUnderlyingRepaid",
                "storedBorrowBalance",
                "supplyBalanceUnderlying",
                "lifetimeSupplyInterestAccrued",
                "borrowBalanceUnderlying",
                "lifetimeBorrowInterestAccrued"
            ],
            "description": "AccountCToken is a single account within a single cToken market, with data such\nas interest earned or paid"
        },
        "AccountCTokenTransaction_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "account"
                    ],
                    "title": "account"
                },
                {
                    "enum": [
                        "tx_hash"
                    ],
                    "title": "tx_hash"
                },
                {
                    "enum": [
                        "timestamp"
                    ],
                    "title": "timestamp"
                },
                {
                    "enum": [
                        "block"
                    ],
                    "title": "block"
                },
                {
                    "enum": [
                        "logIndex"
                    ],
                    "title": "logIndex"
                }
            ]
        },
        "AccountCTokenTransaction_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "account": {
                    "$ref": "#/definitions/String"
                },
                "account_not": {
                    "$ref": "#/definitions/String"
                },
                "account_gt": {
                    "$ref": "#/definitions/String"
                },
                "account_lt": {
                    "$ref": "#/definitions/String"
                },
                "account_gte": {
                    "$ref": "#/definitions/String"
                },
                "account_lte": {
                    "$ref": "#/definitions/String"
                },
                "account_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "account_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "account_contains": {
                    "$ref": "#/definitions/String"
                },
                "account_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "account_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "account_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "account_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "account_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "account_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "account_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "tx_hash": {
                    "$ref": "#/definitions/Bytes"
                },
                "tx_hash_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "tx_hash_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "tx_hash_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "tx_hash_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "tx_hash_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "timestamp": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "timestamp_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "timestamp_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "block": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "block_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "block_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "logIndex": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_not": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_gt": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_lt": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_gte": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_lte": {
                    "$ref": "#/definitions/BigInt"
                },
                "logIndex_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "logIndex_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigInt"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "AccountCTokenTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "account": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/AccountCToken"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "tx_hash": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "timestamp": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "block": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                },
                "logIndex": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigInt"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": []
                }
            },
            "required": [
                "id",
                "account",
                "tx_hash",
                "timestamp",
                "block",
                "logIndex"
            ],
            "description": "Auxiliary entity for AccountCToken"
        },
        "Account_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "tokens"
                    ],
                    "title": "tokens"
                },
                {
                    "enum": [
                        "countLiquidated"
                    ],
                    "title": "countLiquidated"
                },
                {
                    "enum": [
                        "countLiquidator"
                    ],
                    "title": "countLiquidator"
                },
                {
                    "enum": [
                        "hasBorrowed"
                    ],
                    "title": "hasBorrowed"
                }
            ]
        },
        "Account_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "countLiquidated": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_not": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_gt": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_lt": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_gte": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_lte": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidated_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "countLiquidated_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "countLiquidator": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_not": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_gt": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_lt": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_gte": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_lte": {
                    "$ref": "#/definitions/Int"
                },
                "countLiquidator_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "countLiquidator_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "hasBorrowed": {
                    "$ref": "#/definitions/Boolean"
                },
                "hasBorrowed_not": {
                    "$ref": "#/definitions/Boolean"
                },
                "hasBorrowed_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Boolean"
                    }
                },
                "hasBorrowed_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Boolean"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "TransferEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cTokens transferred"
                },
                "to": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that received tokens"
                },
                "from": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that sent tokens"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "cTokenSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the cToken transferred"
                }
            },
            "required": [
                "id",
                "amount",
                "to",
                "from",
                "blockNumber",
                "blockTime",
                "cTokenSymbol"
            ],
            "description": "TransferEvent will be stored for every mint, redeem, liquidation, and any normal\ntransfer between two accounts."
        },
        "CTokenTransfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cTokens transferred"
                },
                "to": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that received tokens"
                },
                "from": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that sent tokens"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "cTokenSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the cToken transferred"
                }
            },
            "required": [
                "id",
                "amount",
                "to",
                "from",
                "blockNumber",
                "blockTime",
                "cTokenSymbol"
            ],
            "description": "An interface for a transfer of any cToken. TransferEvent, MintEvent,\nRedeemEvent, and LiquidationEvent all use this interface"
        },
        "TransferEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "to"
                    ],
                    "title": "to"
                },
                {
                    "enum": [
                        "from"
                    ],
                    "title": "from"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "cTokenSymbol"
                    ],
                    "title": "cTokenSymbol"
                }
            ]
        },
        "TransferEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "to": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "cTokenSymbol": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "MintEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cTokens transferred"
                },
                "to": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that received tokens (minter)"
                },
                "from": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that sent tokens (CToken contract)"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "cTokenSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the cToken transferred"
                },
                "underlyingAmount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token amount transferred"
                }
            },
            "required": [
                "id",
                "amount",
                "to",
                "from",
                "blockNumber",
                "blockTime",
                "cTokenSymbol"
            ],
            "description": "MintEvent stores information for mints. From address will always be a cToken\nmarket address"
        },
        "MintEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "to"
                    ],
                    "title": "to"
                },
                {
                    "enum": [
                        "from"
                    ],
                    "title": "from"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "cTokenSymbol"
                    ],
                    "title": "cTokenSymbol"
                },
                {
                    "enum": [
                        "underlyingAmount"
                    ],
                    "title": "underlyingAmount"
                }
            ]
        },
        "MintEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "to": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "cTokenSymbol": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingAmount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingAmount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "RedeemEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cTokens transferred"
                },
                "to": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that received tokens (CToken contract)"
                },
                "from": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that sent tokens (redeemer)"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "cTokenSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the cToken transferred"
                },
                "underlyingAmount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying token amount transferred"
                }
            },
            "required": [
                "id",
                "amount",
                "to",
                "from",
                "blockNumber",
                "blockTime",
                "cTokenSymbol"
            ],
            "description": "RedeemEvent stores information for redeems. To address will always be a\ncToken market address"
        },
        "RedeemEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "to"
                    ],
                    "title": "to"
                },
                {
                    "enum": [
                        "from"
                    ],
                    "title": "from"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "cTokenSymbol"
                    ],
                    "title": "cTokenSymbol"
                },
                {
                    "enum": [
                        "underlyingAmount"
                    ],
                    "title": "underlyingAmount"
                }
            ]
        },
        "RedeemEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "to": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "cTokenSymbol": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingAmount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingAmount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingAmount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "LiquidationEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cTokens seized"
                },
                "to": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Liquidator receiving tokens"
                },
                "from": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account being liquidated (borrower)"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "cTokenSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "cToken that was sezied as collateral"
                },
                "underlyingSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the underlying asset repaid through liquidation"
                },
                "underlyingRepayAmount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Underlying cToken amount that was repaid by liquidator"
                }
            },
            "required": [
                "id",
                "amount",
                "to",
                "from",
                "blockNumber",
                "blockTime",
                "cTokenSymbol",
                "underlyingSymbol",
                "underlyingRepayAmount"
            ],
            "description": "LiquidationEvent stores information for liquidations. The event is emitted from\nthe cToken market address."
        },
        "LiquidationEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "to"
                    ],
                    "title": "to"
                },
                {
                    "enum": [
                        "from"
                    ],
                    "title": "from"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "cTokenSymbol"
                    ],
                    "title": "cTokenSymbol"
                },
                {
                    "enum": [
                        "underlyingSymbol"
                    ],
                    "title": "underlyingSymbol"
                },
                {
                    "enum": [
                        "underlyingRepayAmount"
                    ],
                    "title": "underlyingRepayAmount"
                }
            ]
        },
        "LiquidationEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "to": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "cTokenSymbol": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingRepayAmount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "underlyingRepayAmount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "underlyingRepayAmount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "BorrowEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Amount of underlying borrowed"
                },
                "accountBorrows": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total borrows of this asset the account has"
                },
                "borrower": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that borrowed the tokens"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "underlyingSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the borrowed underlying asset"
                }
            },
            "required": [
                "id",
                "amount",
                "accountBorrows",
                "borrower",
                "blockNumber",
                "blockTime",
                "underlyingSymbol"
            ],
            "description": "BorrowEvent stores information for borrows"
        },
        "UnderlyingTransfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Amount of underlying borrowed"
                },
                "accountBorrows": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total borrows of this asset the account has"
                },
                "borrower": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that borrowed the tokens"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "underlyingSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the borrowed underlying asset"
                }
            },
            "required": [
                "id",
                "amount",
                "accountBorrows",
                "borrower",
                "blockNumber",
                "blockTime",
                "underlyingSymbol"
            ],
            "description": "Underlying transfers are transfers of underlying collateral for both borrows\nand repays"
        },
        "BorrowEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "accountBorrows"
                    ],
                    "title": "accountBorrows"
                },
                {
                    "enum": [
                        "borrower"
                    ],
                    "title": "borrower"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "underlyingSymbol"
                    ],
                    "title": "underlyingSymbol"
                }
            ]
        },
        "BorrowEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "borrower": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "underlyingSymbol": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "RepayEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/ID"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Transaction hash concatenated with log index"
                },
                "amount": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Amount of underlying repaid"
                },
                "accountBorrows": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BigDecimal"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Total borrows of this asset the account has"
                },
                "borrower": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Account that borrowed the tokens"
                },
                "blockNumber": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block number"
                },
                "blockTime": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Block time"
                },
                "underlyingSymbol": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Symbol of the borrowed underlying asset"
                },
                "payer": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Payer of the borrow funds"
                }
            },
            "required": [
                "id",
                "amount",
                "accountBorrows",
                "borrower",
                "blockNumber",
                "blockTime",
                "underlyingSymbol",
                "payer"
            ],
            "description": "RepayEvent stores information for repays. Payer is not always the same as\nborrower, such as in the event of a Liquidation"
        },
        "RepayEvent_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "accountBorrows"
                    ],
                    "title": "accountBorrows"
                },
                {
                    "enum": [
                        "borrower"
                    ],
                    "title": "borrower"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "underlyingSymbol"
                    ],
                    "title": "underlyingSymbol"
                },
                {
                    "enum": [
                        "payer"
                    ],
                    "title": "payer"
                }
            ]
        },
        "RepayEvent_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "borrower": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "underlyingSymbol": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "payer": {
                    "$ref": "#/definitions/Bytes"
                },
                "payer_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "payer_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "payer_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "payer_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "payer_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "CTokenTransfer_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "to"
                    ],
                    "title": "to"
                },
                {
                    "enum": [
                        "from"
                    ],
                    "title": "from"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "cTokenSymbol"
                    ],
                    "title": "cTokenSymbol"
                }
            ]
        },
        "CTokenTransfer_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "to": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "to_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "to_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "from_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "from_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "cTokenSymbol": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "cTokenSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "cTokenSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "UnderlyingTransfer_orderBy": {
            "type": "string",
            "anyOf": [
                {
                    "enum": [
                        "id"
                    ],
                    "title": "id"
                },
                {
                    "enum": [
                        "amount"
                    ],
                    "title": "amount"
                },
                {
                    "enum": [
                        "accountBorrows"
                    ],
                    "title": "accountBorrows"
                },
                {
                    "enum": [
                        "borrower"
                    ],
                    "title": "borrower"
                },
                {
                    "enum": [
                        "blockNumber"
                    ],
                    "title": "blockNumber"
                },
                {
                    "enum": [
                        "blockTime"
                    ],
                    "title": "blockTime"
                },
                {
                    "enum": [
                        "underlyingSymbol"
                    ],
                    "title": "underlyingSymbol"
                }
            ]
        },
        "UnderlyingTransfer_filter": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/ID"
                },
                "id_not": {
                    "$ref": "#/definitions/ID"
                },
                "id_gt": {
                    "$ref": "#/definitions/ID"
                },
                "id_lt": {
                    "$ref": "#/definitions/ID"
                },
                "id_gte": {
                    "$ref": "#/definitions/ID"
                },
                "id_lte": {
                    "$ref": "#/definitions/ID"
                },
                "id_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "id_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ID"
                    }
                },
                "amount": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "amount_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "amount_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_not": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lt": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_gte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_lte": {
                    "$ref": "#/definitions/BigDecimal"
                },
                "accountBorrows_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "accountBorrows_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BigDecimal"
                    }
                },
                "borrower": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bytes"
                    }
                },
                "borrower_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "borrower_not_contains": {
                    "$ref": "#/definitions/Bytes"
                },
                "blockNumber": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockNumber_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockNumber_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_not": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lt": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_gte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_lte": {
                    "$ref": "#/definitions/Int"
                },
                "blockTime_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "blockTime_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Int"
                    }
                },
                "underlyingSymbol": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lt": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_gte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_lte": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_not_in": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/String"
                    }
                },
                "underlyingSymbol_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_contains_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_starts_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with": {
                    "$ref": "#/definitions/String"
                },
                "underlyingSymbol_not_ends_with_nocase": {
                    "$ref": "#/definitions/String"
                },
                "_change_block": {
                    "$ref": "#/definitions/BlockChangedFilter",
                    "description": "Filter for the block changed event."
                }
            },
            "required": []
        },
        "_Meta_": {
            "type": "object",
            "properties": {
                "block": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/_Block_"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Information about a specific subgraph block. The hash of the block\nwill be null if the _meta field has a block constraint that asks for\na block number. It will be filled if the _meta field has no block constraint\nand therefore asks for the latest  block"
                },
                "deployment": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/String"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The deployment ID"
                },
                "hasIndexingErrors": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Boolean"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "If `true`, the subgraph encountered indexing errors at some past block"
                }
            },
            "required": [
                "block",
                "deployment",
                "hasIndexingErrors"
            ],
            "description": "The type for the top-level _meta field"
        },
        "_Block_": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Bytes"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The hash of the block"
                },
                "number": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Int"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "The block number"
                }
            },
            "required": [
                "number"
            ]
        },
        "Subscription": {
            "type": "object",
            "properties": {
                "comptroller": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Comptroller"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "comptrollers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Comptroller"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Comptroller_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Comptroller_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "market": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Market"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "markets": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Market"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Market_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Market_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "account": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/Account"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accounts": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/Account_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/Account_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCToken": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/AccountCToken"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokens": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCToken"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCToken_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCToken_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokenTransaction": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/AccountCTokenTransaction"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "accountCTokenTransactions": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCTokenTransaction"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/AccountCTokenTransaction_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "transferEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/TransferEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "transferEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransferEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/TransferEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/TransferEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "mintEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/MintEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "mintEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MintEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/MintEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/MintEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "redeemEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/RedeemEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "redeemEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RedeemEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/RedeemEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/RedeemEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "liquidationEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/LiquidationEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "liquidationEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LiquidationEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/LiquidationEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/LiquidationEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "borrowEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/BorrowEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "borrowEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BorrowEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/BorrowEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/BorrowEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "repayEvent": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/RepayEvent"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "repayEvents": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepayEvent"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/RepayEvent_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/RepayEvent_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "ctokenTransfer": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/CTokenTransfer"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "ctokenTransfers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CTokenTransfer"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/CTokenTransfer_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/CTokenTransfer_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "underlyingTransfer": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/UnderlyingTransfer"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/ID"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "id",
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "underlyingTransfers": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnderlyingTransfer"
                            }
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "skip": {
                                    "$ref": "#/definitions/Int",
                                    "default": 0
                                },
                                "first": {
                                    "$ref": "#/definitions/Int",
                                    "default": 100
                                },
                                "orderBy": {
                                    "$ref": "#/definitions/UnderlyingTransfer_orderBy"
                                },
                                "orderDirection": {
                                    "$ref": "#/definitions/OrderDirection"
                                },
                                "where": {
                                    "$ref": "#/definitions/UnderlyingTransfer_filter"
                                },
                                "block": {
                                    "$ref": "#/definitions/Block_height",
                                    "description": "The block at which the query should be executed. Can either be a `{ hash:\nBytes }` value containing a block hash, a `{ number: Int }` containing the\nblock number, or a `{ number_gte: Int }` containing the minimum block\nnumber. In the case of `number_gte`, the query will be executed on the\nlatest block only if the subgraph has progressed to or past the minimum\nblock number. Defaults to the latest block when omitted."
                                },
                                "subgraphError": {
                                    "$ref": "#/definitions/_SubgraphErrorPolicy_",
                                    "default": "deny",
                                    "description": "Set to `allow` to receive data even if the subgraph has skipped over errors while syncing."
                                }
                            },
                            "required": [
                                "subgraphError"
                            ]
                        }
                    },
                    "required": []
                },
                "_meta": {
                    "type": "object",
                    "properties": {
                        "return": {
                            "$ref": "#/definitions/_Meta_"
                        },
                        "arguments": {
                            "type": "object",
                            "properties": {
                                "block": {
                                    "$ref": "#/definitions/Block_height"
                                }
                            },
                            "required": []
                        }
                    },
                    "required": [],
                    "description": "Access to subgraph metadata"
                }
            },
            "required": [
                "comptrollers",
                "markets",
                "accounts",
                "accountCTokens",
                "accountCTokenTransactions",
                "transferEvents",
                "mintEvents",
                "redeemEvents",
                "liquidationEvents",
                "borrowEvents",
                "repayEvents",
                "ctokenTransfers",
                "underlyingTransfers"
            ]
        }
    }
}
